{"version":3,"sources":["components/AppNav.js","components/context/TodoApp.context.js","components/TodoItem.js","components/hooks/useInputState.js","components/InputForm.js","components/TodoList.js","components/About.js","components/TodoApp.js","App.js","reportWebVitals.js","index.js"],"names":["AppNav","className","exact","activeClassName","to","TodoAppContext","createContext","TodoAppContextProvider","props","ini","JSON","parse","localStorage","getItem","initialTodos","useState","todos","setTodos","useEffect","setItem","stringify","showAdd","setShowAdd","Provider","value","addTodo","newTodoText","id","uuidv4","task","deleteTodo","todoId","newTodos","filter","todo","toggleAdd","children","TodoItem","useContext","onClick","xmlns","width","height","viewBox","fill","d","useInputState","initialValue","setValue","e","target","InputForm","handleChange","reset","type","autoFocus","placeholder","onChange","TodoList","length","map","About","href","TodoApp","path","render","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.50d3f3b2.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport \"./assets/css/AppNav.css\";\r\n\r\nconst AppNav = () => {\r\n  return (\r\n    <div className=\"app-nav\">\r\n      <NavLink exact activeClassName=\"active-link\" to=\"/\">\r\n        Todo\r\n      </NavLink>\r\n      <NavLink exact activeClassName=\"active-link\" to=\"/about\">\r\n        About\r\n      </NavLink>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AppNav;\r\n","import React, {createContext, useEffect, useState} from 'react';\r\nimport {v4 as uuidv4} from \"uuid\";\r\n\r\nexport const TodoAppContext = createContext()\r\n\r\nconst TodoAppContextProvider = (props) => {\r\n\r\n    const ini = JSON.parse(localStorage.getItem(\"todos\"));\r\n\r\n    const initialTodos = ini ? ini : [];\r\n\r\n    const [todos, setTodos] = useState(initialTodos)\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(\"todos\", JSON.stringify(todos));\r\n    }, [todos]);\r\n\r\n    const addTodo = (newTodoText) => {\r\n        setTodos([...todos, {id: uuidv4(), task: newTodoText}]);\r\n    };\r\n    const deleteTodo = (todoId) => {\r\n        const newTodos = todos.filter((todo) => todo.id !== todoId);\r\n        setTodos(newTodos);\r\n    };\r\n\r\n    //\r\n\r\n    const [showAdd, setShowAdd] = useState(false);\r\n\r\n    const toggleAdd = () => {\r\n        setShowAdd(!showAdd);\r\n    };\r\n\r\n    return <TodoAppContext.Provider value={{todos,addTodo,deleteTodo, setShowAdd, showAdd, toggleAdd}}>{props.children}</TodoAppContext.Provider>\r\n}\r\n\r\nexport default TodoAppContextProvider;","import React, {useContext} from \"react\";\r\nimport \"./assets/css/TodoItem.css\";\r\nimport {TodoAppContext} from \"./context/TodoApp.context\";\r\n\r\nconst TodoItem = ({ task, id }) => {\r\n    const { deleteTodo} = useContext(TodoAppContext);\r\n  return (\r\n    <div className=\"flexy item\">\r\n      <p>{task}</p>\r\n      <div className=\"svg\">\r\n        <svg\r\n          onClick={() => deleteTodo(id)}\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          width=\"24\"\r\n          height=\"24\"\r\n          viewBox=\"0 0 24 24\"\r\n        >\r\n          <title>Delete Todo</title>\r\n          <g fill=\"none\">\r\n            <path\r\n    d=\"M15.59 7L12 10.59 8.41 7 7 8.41 10.59 12 7 15.59 8.41 17 12 13.41 15.59 17 17 15.59 13.41 12 17 8.41 15.59 7z\"\r\n    fill=\"#111111\"\r\n    />\r\n          </g>\r\n        </svg>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodoItem;\r\n","import { useState } from \"react\";\r\n\r\nconst useInputState = (initialValue) => {\r\n  const [value, setValue] = useState(initialValue);\r\n  const handleChange = (e) => {\r\n    setValue(e.target.value);\r\n  };\r\n  const reset = () => {\r\n    setValue(\"\");\r\n  };\r\n  return [value, handleChange, reset];\r\n};\r\n\r\nexport default useInputState;\r\n","import React, {useContext} from \"react\";\r\nimport \"./assets/css/InputForm.css\";\r\nimport useInputState from \"./hooks/useInputState\";\r\nimport {TodoAppContext} from \"./context/TodoApp.context\";\r\n\r\nconst InputForm = () => {\r\n    const {addTodo, setShowAdd} = useContext(TodoAppContext);\r\n  const [value, handleChange, reset] = useInputState(\"\");\r\n  return (\r\n    <div className=\"flexy relative\">\r\n      <input\r\n        type=\"text\"\r\n        autoFocus\r\n        className=\"fullinput\"\r\n        placeholder=\"New reminder...\"\r\n        value={value}\r\n        onChange={handleChange}\r\n      />\r\n      <div className=\"svg\">\r\n        <svg\r\n          onClick={() => {\r\n            if (value !== \"\") {\r\n              addTodo(value);\r\n              setShowAdd(false);\r\n              reset();\r\n            }\r\n          }}\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          width=\"24\"\r\n          height=\"24\"\r\n          viewBox=\"0 0 24 24\"\r\n        >\r\n          <title>Save Reminder</title>\r\n          <g fill=\"#111111\">\r\n            <path d=\"M10 15.586l-3.293-3.293-1.414 1.414L10 18.414l9.707-9.707-1.414-1.414z\"/>\r\n          </g>\r\n        </svg>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InputForm;\r\n","import React, { useContext } from \"react\";\r\nimport TodoItem from \"./TodoItem\";\r\nimport InputForm from \"./InputForm\";\r\nimport { TodoAppContext } from \"./context/TodoApp.context\";\r\nimport \"./assets/css/TodoList.css\";\r\n\r\nconst TodoList = () => {\r\n  const { todos, showAdd, toggleAdd } = useContext(TodoAppContext);\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"flexy sb\">\r\n        <h1 className=\"title\">Reminders</h1>\r\n        <div className=\"svg add\" onClick={toggleAdd}>\r\n          <svg\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            width=\"24\"\r\n            height=\"24\"\r\n            viewBox=\"0 0 24 24\">\r\n            <title>Add new todo</title>\r\n            <g fill=\"#111111\">\r\n              <path d=\"M19 11h-6V5h-2v6H5v2h6v6h2v-6h6z\" />\r\n            </g>\r\n          </svg>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        {todos.length > 0\r\n          ? todos.map(todo => (\r\n              <TodoItem id={todo.id} key={todo.id} task={todo.task} />\r\n            ))\r\n          : !showAdd && <p className=\"flexy item\">Add new todo</p>}\r\n        {showAdd ? <InputForm /> : \"\"}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodoList;\r\n","import React from \"react\";\r\n\r\nconst About = () => {\r\n  return (\r\n    <div>\r\n      <h1 className=\"sb\">About</h1>\r\n      <p>\r\n        This is a react app by{\" \"}\r\n        <a href=\"https://github.com/atomslyte\">anthonie</a>\r\n        <p>Software Developer. UI/Ux Designer </p>\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import React from \"react\";\r\nimport TodoList from \"./TodoList\";\r\nimport About from \"./About\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport \"./assets/css/TodoApp.css\";\r\n\r\n\r\nconst TodoApp = () => {\r\n  return (\r\n    <div className=\"todo-app\">\r\n      <Switch>\r\n        <Route\r\n          exact\r\n          path=\"/\"\r\n          render={() => (\r\n            <TodoList />\r\n          )}\r\n        />\r\n        <Route exact path=\"/about\" render={() => <About />} />\r\n      </Switch>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodoApp;\r\n","import React from \"react\"\r\nimport \"./App.css\";\r\nimport AppNav from \"./components/AppNav\";\r\nimport TodoApp from \"./components/TodoApp\";\r\nimport TodoAppContextProvider from \"./components/context/TodoApp.context\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <AppNav />\r\n      <TodoAppContextProvider>\r\n          <TodoApp />\r\n      </TodoAppContextProvider>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport { HashRouter } from \"react-router-dom\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <HashRouter>\r\n      <App />\r\n    </HashRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}